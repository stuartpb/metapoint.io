!!!
html
  head
    meta(charset="utf-8")
    title NO WAY!!! NO WAY!!!
    style
      body {
        font-family: sans-serif;
      }
      form {
        margin: 4px auto;
        padding: 4px;
        width: 800px;
        border: 4px solid black;
      }
      input[type="text"] {
        width: 300px;
      }
      textarea {
        width: 90%;
      }
      #refresh-label {
        position: absolute;
        right: 1em;
        top: 1em;
      }
      li.sitelink {
        display: inline;
      }
      li.this-host {
        font-weight: bold;
        color: red;
      }
    script(src='static/xhrapi.js')
    script
      function removeFromSuggestions(node) {
        return function() {
          var sugforms = document.getElementById("sugforms")
          sugforms.removeChild(node)
          if(sugforms.children.length == 0 &&
            document.getElementById("refreshonex").checked){
            document.location.reload();
          }
        }
      }

      var approve = callWithForm('merge',removeFromSuggestions)
      var drop = callWithForm('drop',removeFromSuggestions)

      function approveAll() {
        var sugforms = document.getElementById("sugforms").children;

        for (var i = 0; i < sugforms.length; ++i) {
          var sugform = sugforms[i];
          if (sugform.elements.namedItem('batchok').checked){
            approve(sugform)
          }
        }
      }
  body
    h1 Suggestions
    label#refresh-label Refresh on exhaustion
      input(type="checkbox", id="refreshonex", checked)
    #sugforms
      for suggestion, i in suggestions
        current = currents[i]
        form(id="suggestion-"+i).suggestion
          input(type="hidden",name="sid",value=suggestion._id)
          .idline
            label Topic
              input(type="text", name="topic", value=suggestion.topic)
            label Scope
              input(type="text", name="scope", value=suggestion.scope)
            label Batch OK
              input(type="checkbox", name="batchok", checked)
          .tline
            label Host
              input(type="text", name="host", value=suggestion.host)
            label Path
              input(type="text", name="path", value=suggestion.path)
            // This should actually probably be a JS call so it visits
             | whatever host+path is currently written :/
            a(href='http://'+suggestion.host+suggestion.path) Visit
          if current
            ul.sitelinks
              ='Current: '
              for host, path in current.sites
                host = host.replace(/_/g,'.')
                li(class = host == suggestion.host ? 'sitelink this-host' : 'sitelink')
                  a(href='http://'+host+path) host
          .notes
            label Notes
              br
              textarea(name="notes")= suggestion.notes
          .actions
            button(type="button",onclick="approve(this.form)") Approve
            button(type="button",onclick="drop(this.form)") Remove
    button#batchy(onclick="approveAll()") Approve All Checked Suggestions
